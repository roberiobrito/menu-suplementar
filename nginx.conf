user  nginx;
worker_processes auto;


error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  8096;
    multi_accept        on;
    use                 epoll;
}

worker_rlimit_nofile 40000;

http {

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    proxy_cache_path /tmp/cache levels=1:2 keys_zone=cache:60m max_size=1G;

	server {
	    listen 80;
	    server_name socittes.camara.gov.br;
	    proxy_intercept_errors off;
	    proxy_send_timeout 120;
	    proxy_read_timeout 300;
	    proxy_buffering    off;
	    proxy_buffer_size  128k;
	    proxy_buffers 100  128k;
	    sendfile           on;
	    tcp_nopush         on;
	    tcp_nodelay        on;
	    keepalive_timeout  15;

	    # Compression

	    # Enable Gzip compressed.
	    gzip on;

	    # Enable compression both for HTTP/1.0 and HTTP/1.1 (required for CloudFront).
	    gzip_http_version  1.0;

	    # Compression level (1-9).
	    # 5 is a perfect compromise between size and cpu usage, offering about
	    # 75% reduction for most ascii files (almost identical to level 9).
	    gzip_comp_level    5;

	    # Don't compress anything that's already small and unlikely to shrink much
	    # if at all (the default is 20 bytes, which is bad as that usually leads to
	    # larger files after gzipping).
	    gzip_min_length    256;

	    # Compress data even for clients that are connecting to us via proxies,
	    # identified by the "Via" header (required for CloudFront).
	    gzip_proxied       any;

	    # Tell proxies to cache both the gzipped and regular version of a resource
	    # whenever the client's Accept-Encoding capabilities header varies;
	    # Avoids the issue where a non-gzip capable client (which is extremely rare
	    # today) would display gibberish if their proxy gave them the gzipped version.
	    gzip_vary          on;

	    # Compress all output labeled with one of the following MIME-types.
	    gzip_types
		application/atom+xml
		application/javascript
		application/json
		application/rss+xml
		application/vnd.ms-fontobject
		application/x-font-ttf
		application/x-web-app-manifest+json
		application/xhtml+xml
		application/xml
		font/opentype
		image/svg+xml
		image/x-icon
		image/png
		image/gif
		image/jpeg
		text/css
		text/plain
		text/x-component;

	    client_max_body_size 5G;


	    location /api/menu-suplementar {
		    alias /usr/share/nginx/html;
            try_files $uri $uri/ /menu-suplementar/index.html;
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }
		    location ~* \.(html|css|jpg|gif|ico|js|mp4)$ {
		        add_header Cache-Control must-revalidate;
                etag on;
                proxy_cache          cache;
                proxy_cache_key      $host$uri$is_args$args;
                proxy_cache_valid    200 301 302 30m;
                expires              30m;
		    }
	    }
	}
}
